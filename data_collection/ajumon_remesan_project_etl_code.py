# -*- coding: utf-8 -*-
"""Ajumon_Remesan_Project_ETL_Code.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1BOELKMoxKAh0lBsjW3uq_FwjPWUD36XR
"""

#Importing Libraries
!pip install bs4
!pip install requests

import csv
import requests
from bs4 import BeautifulSoup
import re
import random

#Product Links from Flipkart Product review Page



# #Product 1: realme GT Master Edition (Luna White, 256 GB) Reviews
# product_1_url = 'https://www.flipkart.com/realme-gt-master-luna-white-256-gb/product-reviews/itmcc74e8302084d?pid=MOBG5JPXZAGWBMK7&lid=LSTMOBG5JPXZAGWBMK7NC6GQD&marketplace=FLIPKART&&page={}'

# #Product 2: realme GT Neo 3T (Drifting White, 128 GB) Reviews
# product_2_url = 'https://www.flipkart.com/realme-gt-neo-3t-drifting-white-128-gb/product-reviews/itmd1b8c6a6c8604?pid=MOBGHBJGT9GH23W9&lid=LSTMOBGHBJGT9GH23W9XTKSY9&marketplace=FLIPKART&page={}'

# #Product 2: realme 9 Pro+ 5G (Midnight Black, 128 GB) Reviews
# product_3_url = 'https://www.flipkart.com/realme-9-pro-5g-midnight-black-128-gb/product-reviews/itm15e7a06fe9352?pid=MOBGB5Y3U6YDNTCE&lid=LSTMOBGB5Y3U6YDNTCE3LNQKF&marketplace=FLIPKART&page={}'

# #Product 4: realme 7 (Mist White, 128 GB) Reviews
# product_4_url = 'https://www.flipkart.com/realme-7-mist-white-128-gb/product-reviews/itme55d08631f19b?pid=MOBFUYUNHENTTY9M&lid=LSTMOBFUYUNHENTTY9MM8XIXP&aid=overall&certifiedBuyer=false&sortOrder=POSITIVE_FIRST&page={}'



# product_links = ['https://www.flipkart.com/realme-gt-master-luna-white-256-gb/product-reviews/itmcc74e8302084d?pid=MOBG5JPXZAGWBMK7&lid=LSTMOBG5JPXZAGWBMK7NC6GQD&marketplace=FLIPKART&&page={}'
#                  ,'https://www.flipkart.com/realme-gt-neo-3t-drifting-white-128-gb/product-reviews/itmd1b8c6a6c8604?pid=MOBGHBJGT9GH23W9&lid=LSTMOBGHBJGT9GH23W9XTKSY9&marketplace=FLIPKART&page={}'
#                  ,'https://www.flipkart.com/realme-9-pro-5g-midnight-black-128-gb/product-reviews/itm15e7a06fe9352?pid=MOBGB5Y3U6YDNTCE&lid=LSTMOBGB5Y3U6YDNTCE3LNQKF&marketplace=FLIPKART&page={}'
#                  , 'https://www.flipkart.com/realme-7-mist-white-128-gb/product-reviews/itme55d08631f19b?pid=MOBFUYUNHENTTY9M&lid=LSTMOBFUYUNHENTTY9MM8XIXP&aid=overall&certifiedBuyer=false&sortOrder=POSITIVE_FIRST&page={}'
#                 ]

#1: Nothing Phone 1
#2: Google Pixel 6A
#3: Realme 10 Pro + 5G
#4: Samsung Galaxy Z Flip 3
#5: Poco M4 Pro
#6: Galaxy S21 FE
#7: Vivo T1 4G
#8: Noise Colorfit Caliber Smart Watch
#9: Samsung Galaxy F04

product_links = [ 'https://www.flipkart.com/nothing-phone-1-black-128-gb/product-reviews/itmeea53a564de47?pid=MOBGCYGPFEGDMYQR&lid=LSTMOBGCYGPFEGDMYQRIMJJ0P&marketplace=FLIPKART&page={}'
                 ,'https://www.flipkart.com/google-pixel-6a-charcoal-128-gb/product-reviews/itme5ae89135d44e?pid=MOBGFKX5YUXD74Z3&lid=LSTMOBGFKX5YUXD74Z3MXA2OB&marketplace=FLIPKART&page={}'
                 ,'https://www.flipkart.com/realme-10-pro-5g-dark-matter-128-gb/product-reviews/itmd32a2fec1fb60?pid=MOBGK8WZ6FQR4YCJ&lid=LSTMOBGK8WZ6FQR4YCJHEJKXL&marketplace=FLIPKART&page={}'
                 ,'https://www.flipkart.com/samsung-galaxy-z-flip3-5g-cream-256-gb/product-reviews/itm304db41192be1?pid=MOBG6YQHJZKMW7ZC&lid=LSTMOBG6YQHJZKMW7ZCC3V7EZ&marketplace=FLIPKART&page={}'
                 ,'https://www.flipkart.com/poco-m4-pro-power-black-128-gb/product-reviews/itm084d4c7d880f3?pid=MOBGBTHFNDZUUYRH&lid=LSTMOBGBTHFNDZUUYRHARHFRD&marketplace=FLIPKART&page={}'
                 ,'https://www.flipkart.com/samsung-galaxy-s21-fe-5g-graphite-128-gb/product-reviews/itm7be0f72fff180?pid=MOBGBPFZSPRG8GSU&lid=LSTMOBGBPFZSPRG8GSUQRST90&marketplace=FLIPKART&page={}'
                 ,'https://www.flipkart.com/vivo-t1-44w-ice-dawn-128-gb/product-reviews/itm2a08ebbea3689?pid=MOBGDRHVZ2F9AAM8&lid=LSTMOBGDRHVZ2F9AAM8EHUZU0&marketplace=FLIPKART&page={}'
                 ,'https://www.flipkart.com/noise-colorfit-caliber-smart-watch-15-day-battery-1-69-display-60-sports-modes-smartwatch/product-reviews/itm21dca40c77bbe?pid=SMWG9UKPHDH47DWK&lid=LSTSMWG9UKPHDH47DWKIUPP6A&marketplace=FLIPKART&page={}'
                 ,'https://www.flipkart.com/samsung-galaxy-f04-jade-purple-64-gb/product-reviews/itm0934dc56a1df7?pid=MOBGKY2VTP3XETBR&lid=LSTMOBGKY2VTP3XETBRJKXEIM&marketplace=FLIPKART&page={}'
                 ,'&page={}'
                ]

"""Note: for this product, total 17 products from flipkart is used. 

List of products:
iPhone 13, Redmi 10, Samsung Galaxy f23, Samsung Galaxy Z Flip 3, Samsung Galaxy S21 FE, Samsung Galaxy F04, Realme GT Master Edition, Realme GT Neo 3T, Realme 9 pro+, Realme 7, Realme 10 pro +, Google Pixel 6A, Nothing Phone 1, Poco M4 Pro, Vivo T1 4G, Noise Colorfit Caliber Smart Watch & Infinix Hot 30i
"""

#request get function
def soup_fn(Pnumber):
    global reviews,soup
    url = url_template.format(Pnumber)
    headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/110.0.0.0 Safari/537.36 Edg/110.0.1587.56'}
    r = requests.get(url, headers=headers)
    soup = BeautifulSoup(r.content, 'html.parser')
    reviews = soup.find_all('div', {'class': '_1AtVbE col-12-12'})
    
#spliting string funtion
def split_string(string):
    split_string = string.split(", ")
    a = split_string[0]
    b = ", ".join(split_string[1:])
    return a, b

#converting to month and date function
def fix_month(string):
    months = ["Jan,", "Feb,", "Mar,", "Apr,", "May,", "Jun,", "Jul,", "Aug,", "Sep,", "Oct,", "Nov,", "Dec,"]
    for month in months:
        if month in string:
            index = string.find(month)
            year = string[index+4:index+9]
            return month+year
        else:
            pattern = r"\d{1,2} (day|days|Today|month|months) ago"
# Extract the date from variable a
            match = re.search(pattern, string)
            if match:
                date = match.group(0)
                return date  
            elif "Today" in string:
                return "Today"
    return "N/A"

#reviewer id funtion to generate 8 digit unique id for customers
def reviewer_id():
    return random.sample(range(11111111, 99999999), 1)[0]

#Finding total number of pages
def page_numbers():
    soup_fn(2)
    page_elem = soup.find('div', {'class': '_2MImiq _1Qnn1K'})
    page = page_elem.text if page_elem else 'N/A'
    pattern = r'Page \d+ of ([\d,]+)'
    match = re.search(pattern, page)
    if match:
      page_number = match.group(1).replace(',', '')
      page_number = int(page_number)
    else:
      page_number = 'N/A'
    print("Total number of pages:",page_number)
    print("Extracting reviews..")
    return page_number

# # Extract product name for dataset file name
# name_elem = soup.find('a', {'class': 's1Q9rs _2qfgz2'})
# name = name_elem.text if name_elem else 'N/A'
# filename=name.replace(' ','_')+'hh_review.csv'

#Exchange rate api for converting inr to euro 
price_url = 'https://api.exchangerate-api.com/v4/latest/INR'
price_response = requests.get(price_url)
price_data = price_response.json()
price_rate = price_data['rates']['EUR']
print("euro conversion rate=",price_rate)

#creating and opening csv file to write new datas.

with open('realme_reviews.csv', 'w', encoding='utf-8',newline='') as f:
  writer = csv.writer(f)
  writer.writerow(['Reviewer_ID','Reviewer_Type','Location','Date','Product_Name', 'Price_in_INR','Price_in_EURO','Rating', 'Review_Title', 'Review_Text'])
  for url_template in product_links:
    page_number=page_numbers()
    for i in range(1, page_number+1):
      soup_fn(i)
      for review in reviews:
#           # Extract reviewer name
#           name_elem = review.find('p', {'class': '_2sc7ZR _2V5EHH'})
#           name = name_elem.text if name_elem else 'N/A'
          # generate reviewer id
          rid=reviewer_id()
          # Buyer type and location
          buyer_location_elem = review.find('p', {'class': '_2mcZGG'})
          buyer_location = buyer_location_elem.text if buyer_location_elem else 'No Data, No Data'

          if  ", " in buyer_location:
#             buyer_type, location = buyer_location.split(", ")
            buyer_type, location = split_string(buyer_location)
          
          else:
            location, buyer_type =  'N/A', buyer_location
            
          # Extract product name
          name_elem = soup.find('a', {'class': 's1Q9rs _2qfgz2'})
          product_name = name_elem.text if name_elem else 'N/A'

          # Review Date
          date_elem = review.find('div', {'class': 'row _3n8db9'})
          date_data = date_elem.text if date_elem else 'N/A'
          date = fix_month(date_data)
                              
          # Extract product price
          price_elem = soup.find('div', {'class': '_30jeq3'})
          price = price_elem.text.replace('â‚¹', '').replace(',', '') if price_elem else 'N/A'
          inr_price = round(float(price), 2)
          euro_price = round(float(inr_price * price_rate), 2)

          # Extract review heading
          heading_elem = review.find('p', {'class': '_2-N8zT'})
          title = heading_elem.text if heading_elem else 'N/A'
          
          # Extract review text
          review_elem = review.find('div', {'class': 't-ZTKy'})
          review_text = review_elem.text.replace('READ MORE', '') if review_elem else 'N/A'
          
          # Extract rating
          rating_elem = review.find('div', {'class': '_3LWZlK'})
          rating = rating_elem.text if rating_elem else 'N/A'
          #writing all valid reviews to the file
          if 'N/A' not in [title, review_text]:
            writer.writerow([rid, buyer_type, location, date,product_name, inr_price, euro_price, rating, title, review_text])
      print("p:",i)
print("Reviews saved to ",'realme_reviews.csv')

